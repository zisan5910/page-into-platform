
import TopNavigation from '../components/TopNavigation';
import BottomNavigation from '../components/BottomNavigation';
import { Bell, Clock } from 'lucide-react';

const Notifications = () => {
  const notifications = [
    {
      id: 1,
      title: '‡¶®‡¶§‡ßÅ‡¶® ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞',
      message: '‡¶°‡¶æ. ‡¶Ü‡¶π‡¶Æ‡ßá‡¶¶ ‡¶π‡¶æ‡¶∏‡¶æ‡¶® ‡¶®‡¶§‡ßÅ‡¶® ‡¶ö‡ßá‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶ñ‡ßÅ‡¶≤‡ßá‡¶õ‡ßá‡¶®',
      time: '‡ß® ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá',
      read: false,
      type: 'info'
    },
    {
      id: 2,
      title: '‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶®‡ßã‡¶ü‡¶ø‡¶∂',
      message: '‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ‡¶ï‡¶æ‡¶≤ ‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶∏‡ßç‡¶¨‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ',
      time: '‡ß´ ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá',
      read: false,
      type: 'urgent'
    },
    {
      id: 3,
      title: '‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡ßá‡¶¨‡¶æ',
      message: '‡¶π‡ßã‡¶Æ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶ö‡¶æ‡¶≤‡ßÅ',
      time: '‡ßß ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá',
      read: true,
      type: 'info'
    },
    {
      id: 4,
      title: '‡¶∞‡¶ï‡ßç‡¶§‡¶¶‡¶æ‡¶® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™',
      message: '‡¶Ü‡¶ó‡¶æ‡¶Æ‡ßÄ‡¶ï‡¶æ‡¶≤ ‡¶ß‡ßÅ‡¶®‡¶ü ‡¶∏‡¶¶‡¶∞ ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤‡ßá ‡¶∞‡¶ï‡ßç‡¶§‡¶¶‡¶æ‡¶® ‡¶ï‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™',
      time: '‡ß© ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá',
      read: false,
      type: 'urgent'
    },
    {
      id: 5,
      title: '‡¶®‡¶§‡ßÅ‡¶® ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤',
      message: '‡¶ß‡ßÅ‡¶®‡¶ü ‡¶è‡¶≤‡¶æ‡¶ï‡¶æ‡¶Ø‡¶º ‡¶®‡¶§‡ßÅ‡¶® ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶≠‡ßá‡¶ü ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‡¶ñ‡ßã‡¶≤‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá',
      time: '‡ß¨ ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá',
      read: true,
      type: 'info'
    },
    {
      id: 6,
      title: '‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü',
      message: 'DhunatHub ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™‡ßá‡¶∞ ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡¶æ‡¶∞‡ßç‡¶∂‡¶® ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶ö‡ßç‡¶õ‡ßá',
      time: '‡ßÆ ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá',
      read: false,
      type: 'update'
    },
    {
      id: 7,
      title: '‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶õ‡¶æ‡¶°‡¶º',
      message: '‡¶∏‡¶ï‡¶≤ ‡¶°‡¶æ‡¶Ø‡¶º‡¶æ‡¶ó‡¶®‡¶∏‡ßç‡¶ü‡¶ø‡¶ï ‡¶∏‡ßá‡¶®‡ßç‡¶ü‡¶æ‡¶∞‡ßá ‡ß®‡ß¶% ‡¶õ‡¶æ‡¶°‡¶º',
      time: '‡ßß‡ß® ‡¶ò‡¶®‡ßç‡¶ü‡¶æ ‡¶Ü‡¶ó‡ßá',
      read: true,
      type: 'info'
    },
    {
      id: 8,
      title: '‡¶ü‡ßç‡¶∞‡ßá‡¶á‡¶®‡¶ø‡¶Ç ‡¶™‡ßç‡¶∞‡ßã‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ',
      message: '‡¶¨‡¶ø‡¶®‡¶æ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡ßá ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶∂‡ßÅ‡¶∞‡ßÅ',
      time: '‡ßß ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá',
      read: false,
      type: 'info'
    },
    {
      id: 9,
      title: '‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶æ‡¶∏ ‡¶∞‡ßÅ‡¶ü',
      message: '‡¶ß‡ßÅ‡¶®‡¶ü-‡¶¢‡¶æ‡¶ï‡¶æ ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡¶æ‡¶∏ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶ö‡¶æ‡¶≤‡ßÅ',
      time: '‡ß® ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá',
      read: true,
      type: 'info'
    },
    {
      id: 10,
      title: '‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶∏‡ßá‡¶¨‡¶æ',
      message: '‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶¨‡ßá‡¶≤‡¶æ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶¨‡ßÅ‡¶≤‡ßá‡¶®‡ßç‡¶∏ ‡¶∏‡ßá‡¶¨‡¶æ ‡ß®‡ß™/‡ß≠ ‡¶ö‡¶æ‡¶≤‡ßÅ',
      time: '‡ß© ‡¶¶‡¶ø‡¶® ‡¶Ü‡¶ó‡ßá',
      read: false,
      type: 'urgent'
    }
  ];

  const getNotificationIcon = (type: string) => {
    switch (type) {
      case 'urgent':
        return 'üö®';
      case 'update':
        return 'üîÑ';
      default:
        return '‚ÑπÔ∏è';
    }
  };

  return (
    <div className="min-h-screen bg-white font-bengali">
      <TopNavigation />
      
      <div className="pt-14 pb-20">
        {/* Header */}
        <div className="bg-gradient-to-r from-blue-500 to-blue-600 text-white px-4 py-4">
          <div className="flex items-center space-x-3">
            <Bell className="h-6 w-6" />
            <div>
              <h1 className="text-lg font-bold font-bengali">‡¶¨‡¶ø‡¶ú‡ßç‡¶û‡¶™‡ßç‡¶§‡¶ø</h1>
              <p className="text-blue-100 font-bengali text-sm">‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶Ü‡¶™‡¶°‡ßá‡¶ü</p>
            </div>
          </div>
        </div>

        {/* Notifications List */}
        <div className="px-4 py-3">
          <div className="space-y-3">
            {notifications.map((notification) => (
              <div
                key={notification.id}
                className={`rounded-lg p-3 border transition-colors ${
                  notification.read 
                    ? 'bg-gray-50 border-gray-100' 
                    : notification.type === 'urgent'
                    ? 'bg-red-50 border-red-100'
                    : 'bg-blue-50 border-blue-100'
                }`}
              >
                <div className="flex items-start space-x-3">
                  <span className="text-lg flex-shrink-0">
                    {getNotificationIcon(notification.type)}
                  </span>
                  
                  <div className="flex-1 min-w-0">
                    <div className="flex items-center justify-between mb-1">
                      <h3 className={`font-semibold font-bengali text-sm ${
                        notification.read ? 'text-gray-700' : 'text-gray-900'
                      }`}>
                        {notification.title}
                      </h3>
                      
                      {!notification.read && (
                        <span className="w-2 h-2 bg-blue-500 rounded-full flex-shrink-0"></span>
                      )}
                    </div>
                    
                    <p className={`text-xs font-bengali mb-2 ${
                      notification.read ? 'text-gray-600' : 'text-gray-800'
                    }`}>
                      {notification.message}
                    </p>
                    
                    <div className="flex items-center space-x-1 text-xs text-gray-500">
                      <Clock className="h-3 w-3" />
                      <span className="font-bengali">{notification.time}</span>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      <BottomNavigation />
    </div>
  );
};

export default Notifications;
